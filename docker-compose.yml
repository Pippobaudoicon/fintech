version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: fintech_db
      POSTGRES_USER: fintech_user
      POSTGRES_PASSWORD: fintech_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fintech-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fintech-network

  # Fintech API
  fintech-api:
    build: .
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://fintech_user:fintech_password@postgres:5432/fintech_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secure-jwt-secret-change-this
      JWT_EXPIRES_IN: 7d
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      AUTH_RATE_LIMIT_WINDOW_MS: 900000
      AUTH_RATE_LIMIT_MAX_REQUESTS: 5
      FINANCIAL_RATE_LIMIT_WINDOW_MS: 60000
      FINANCIAL_RATE_LIMIT_MAX_REQUESTS: 10
      BCRYPT_ROUNDS: 12
      LOG_LEVEL: info
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - fintech-network

  # Nginx (optional - for production)
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl  # SSL certificates
    depends_on:
      - fintech-api
    networks:
      - fintech-network

volumes:
  postgres_data:
  redis_data:

networks:
  fintech-network:
    driver: bridge
