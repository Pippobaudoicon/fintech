{"clientVersion":"6.8.2","errorCode":"P1001","level":"error","message":"Failed to start server: Can't reach database server at `postgres:5432`\n\nPlease make sure your database server is running at `postgres:5432`.","name":"PrismaClientInitializationError","service":"fintech-api","stack":"PrismaClientInitializationError: Can't reach database server at `postgres:5432`\n\nPlease make sure your database server is running at `postgres:5432`.\n    at r (/app/node_modules/@prisma/client/runtime/library.js:112:2565)\n    at async startServer (/app/dist/server.js:13:9)","timestamp":"2025-05-30 13:45:20"}
{"level":"error","message":"Authentication error: invalid signature","name":"JsonWebTokenError","service":"fintech-api","stack":"JsonWebTokenError: invalid signature\n    at /app/node_modules/jsonwebtoken/verify.js:171:19\n    at getSecret (/app/node_modules/jsonwebtoken/verify.js:97:14)\n    at module.exports [as verify] (/app/node_modules/jsonwebtoken/verify.js:101:10)\n    at verifyToken (/app/dist/utils/helpers.js:25:35)\n    at authenticate (/app/dist/middleware/auth.js:18:51)\n    at Layer.handleRequest (/app/node_modules/router/lib/layer.js:152:17)\n    at trimPrefix (/app/node_modules/router/index.js:342:13)\n    at /app/node_modules/router/index.js:297:9\n    at processParams (/app/node_modules/router/index.js:582:12)\n    at next (/app/node_modules/router/index.js:291:5)","timestamp":"2025-05-30 14:04:50"}
{"level":"error","message":"Login error: Invalid credentials","service":"fintech-api","stack":"Error: Invalid credentials\n    at UserService.authenticateUser (/app/dist/services/userService.js:26:19)\n    at async UserController.login (/app/dist/controllers/userController.js:25:32)","timestamp":"2025-05-30 14:04:57"}
{"clientVersion":"6.8.2","level":"error","message":"Registration error: \nInvalid `prisma.user.create()` invocation:\n\n{\n  data: {\n    password: \"$2b$12$jMm/tcwzYk0RoVLsUZGQfOfkzb4FO4B3/KsHBuHXzUxYDdaTl8UpW\",\n    dateOfBirth: new Date(\"1990-05-15T00:00:00.000Z\"),\n    lastName: \"Smith\",\n    email: \"jane.smith@example.com\",\n    firstName: \"Jane\",\n    phoneNumber: \"+1234567890\",\n    ~~~~~~~~~~~\n?   id?: String,\n?   phone?: String | Null,\n?   address?: String | Null,\n?   city?: String | Null,\n?   country?: String | Null,\n?   postalCode?: String | Null,\n?   role?: UserRole,\n?   kycStatus?: KYCStatus,\n?   isActive?: Boolean,\n?   isVerified?: Boolean,\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   accounts?: AccountCreateNestedManyWithoutUserInput,\n?   transactions?: TransactionCreateNestedManyWithoutUserInput,\n?   sessions?: SessionCreateNestedManyWithoutUserInput,\n?   notifications?: NotificationCreateNestedManyWithoutUserInput,\n?   auditLogs?: AuditLogCreateNestedManyWithoutUserInput\n  }\n}\n\nUnknown argument `phoneNumber`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"fintech-api","stack":"PrismaClientValidationError: \nInvalid `prisma.user.create()` invocation:\n\n{\n  data: {\n    password: \"$2b$12$jMm/tcwzYk0RoVLsUZGQfOfkzb4FO4B3/KsHBuHXzUxYDdaTl8UpW\",\n    dateOfBirth: new Date(\"1990-05-15T00:00:00.000Z\"),\n    lastName: \"Smith\",\n    email: \"jane.smith@example.com\",\n    firstName: \"Jane\",\n    phoneNumber: \"+1234567890\",\n    ~~~~~~~~~~~\n?   id?: String,\n?   phone?: String | Null,\n?   address?: String | Null,\n?   city?: String | Null,\n?   country?: String | Null,\n?   postalCode?: String | Null,\n?   role?: UserRole,\n?   kycStatus?: KYCStatus,\n?   isActive?: Boolean,\n?   isVerified?: Boolean,\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   accounts?: AccountCreateNestedManyWithoutUserInput,\n?   transactions?: TransactionCreateNestedManyWithoutUserInput,\n?   sessions?: SessionCreateNestedManyWithoutUserInput,\n?   notifications?: NotificationCreateNestedManyWithoutUserInput,\n?   auditLogs?: AuditLogCreateNestedManyWithoutUserInput\n  }\n}\n\nUnknown argument `phoneNumber`. Available options are marked with ?.\n    at kn (/app/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at Zn.handleRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at Zn.handleAndLogRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at Zn.request (/app/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/app/node_modules/@prisma/client/runtime/library.js:130:9778)\n    at async UserService.createUser (/app/dist/services/userService.js:12:22)\n    at async UserController.register (/app/dist/controllers/userController.js:15:30)","timestamp":"2025-05-30 14:05:10"}
{"clientVersion":"6.8.2","code":"P2002","level":"error","message":"Registration error: \nInvalid `prisma.user.create()` invocation:\n\n\nUnique constraint failed on the fields: (`email`)","meta":{"modelName":"User","target":["email"]},"name":"PrismaClientKnownRequestError","service":"fintech-api","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.user.create()` invocation:\n\n\nUnique constraint failed on the fields: (`email`)\n    at Zn.handleRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:7459)\n    at Zn.handleAndLogRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at Zn.request (/app/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/app/node_modules/@prisma/client/runtime/library.js:130:9778)\n    at async UserService.createUser (/app/dist/services/userService.js:12:22)\n    at async UserController.register (/app/dist/controllers/userController.js:15:30)","timestamp":"2025-05-30 14:09:13"}
{"level":"error","message":"Login error: Invalid credentials","service":"fintech-api","stack":"Error: Invalid credentials\n    at UserService.authenticateUser (/app/dist/services/userService.js:30:19)\n    at async UserController.login (/app/dist/controllers/userController.js:25:32)","timestamp":"2025-05-30 14:09:56"}
{"level":"error","message":"Transfer error: Invalid account(s)","service":"fintech-api","stack":"Error: Invalid account(s)\n    at /app/dist/services/transactionService.js:91:23\n    at async Proxy._transactionWithCallback (/app/node_modules/@prisma/client/runtime/library.js:130:8139)\n    at async TransactionController.transferBetweenAccounts (/app/dist/controllers/transactionController.js:25:37)","timestamp":"2025-05-30 14:25:32"}
